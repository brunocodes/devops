#####################################################
###############     Linux setup     #################
#####################################################
https://marketplace.digitalocean.com/apps/nodejs
https://www.digitalocean.com/community/tutorials/how-to-create-a-new-sudo-enabled-user-on-ubuntu-18-04-quickstart
https://www.digitalocean.com/community/tutorials/how-to-add-and-delete-users-on-ubuntu-18-04

adduser <User Name>
Enter Password

usermod -aG sudo <User Name>

su - <User Name>

#####################################################
###############      SSH setup      #################
#####################################################
https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-2

ssh-keygen -t ed25519

ssh-copy-id sammy@your_server_address

# Disabling Password-based SSH Authentication
sudo vim /etc/ssh/sshd_config
PasswordAuthentication no
PermitRootLogin no

sudo systemctl reload sshd


#####################################################
############### pm2 setup & commands ################
#####################################################

sudo -u nodejs pm2 start <your-file>
sudo -u nodejs pm2 start /var/www/upbot/ --name upbot


#####################################################
###############     nginx setup     #################
#####################################################

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name domainname.com www.domainname.com;

        # location ^~ /assets/ {
        #         gzip_static on;
        #         expires 12h;
        #         add_header Cache-Control public;
        # }

        location / {
                proxy_http_version 1.1;
                proxy_cache_bypass $http_upgrade;

                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                proxy_pass http://localhost:3000;
        }
}

server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # root /var/www/api/html;

        # Add index.php to the list if you are using PHP
        # index index.html index.htm index.nginx-debian.html;

        server_name api.domainname.com;

        location / {
                proxy_http_version 1.1;
                proxy_cache_bypass $http_upgrade;

                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                proxy_pass http://localhost:8000;
        }
}


##############################################
###########        Firewall        ###########
sudo ufw status

sudo ufw allow http
sudo ufw allow https
sudo ufw allow ssh

#####################################################
#########   Domain and nameserver setup   ###########
#####################################################

# A record - Subdomain
api