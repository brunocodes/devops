############################################################################
###########################       Docker       #############################

- List containers
docker container ls -a

- remove container
docker container rm <ID>

- List Images
docker images

- remove image
docker image rm <ID>

- pull image
docker pull <NAME>

- nginx
docker container run -d -p 8080:80 --name mynginx nginx

- apache
docker container run -d -p 8081:80 --name myapache httpd

## 

docker build -t client:v1.o .

############################################################################
##################    Node.js, MongoDB application    ######################

### Create docker flie
touch Dockerfile

FROM node:14-slim

WORKDIR /usr/src/app

COPY ./package*.json ./

RUN npm install

COPY . .

USER node

EXPOSE 3000

CMD ["npm", "start"

### docker compose file
touch docker-compose.yml

version: '3'
services:
  api-server:
    build: ./
    entrypoint: [ "npm", "run", "dev" ]
    env_file: ./config/config.env
    ports:
      - '3000:3000'
    networks:
      - storybooks-app
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mongo
  mongo:
    image: mongo:3.6-xenial
    environment:
      - MONGO_INITDB_DATABASE=storybooks
    ports:
      - '27017:27017'
    networks:
      - storybooks-app
    volumes:
      - mongo-data:/data/db

networks:
  storybooks-app:
    driver: bridge

volumes:
  mongo-data:
    driver: local

### Add Makefile

touch Makefile
